workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "b1a8d7ecee4447aa27341cf8f8bc11086d3b1862ef91f087d89f2382bebd62df",
    strip_prefix = "abseil-cpp-317085adc4e4e474eb4546fa9d37f74c61d95f7f",
    urls = ["https://github.com/abseil/abseil-cpp/archive/317085adc4e4e474eb4546fa9d37f74c61d95f7f.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "c83f69fa8cb7a503d3ae9f736cf679b0846772b1ae955c63133520b749491a7c",
    strip_prefix = "googletest-8a6feabf04bec8fb125e0df0ad1195c42350725f",
    urls = ["https://github.com/google/googletest/archive/8a6feabf04bec8fb125e0df0ad1195c42350725f.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "eae63c3a940d88adb7d862c2fca169b759f553c8df0f91a270d7043d3d6a99f2",
    strip_prefix = "protobuf-229752ddf2375eb3dcd6d3fda4f3c8316b4fe941",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/229752ddf2375eb3dcd6d3fda4f3c8316b4fe941.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "aeb2855ad3631b316086b4c32262409dad30679930b2c99e19618023cbe12bca",
    strip_prefix = "re2-a807e8a3aac2cc33c77b7071efea54fcabe38e0c",
    urls = ["https://github.com/google/re2/archive/a807e8a3aac2cc33c77b7071efea54fcabe38e0c.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "97a7c3f2f601a0d0cc9d26a4173d65e4b7028776a66e2e4fc736e49a5300a483",
    strip_prefix = "rules_cc-b039a551a7b41b70e426e4a3cd60346c89db9b6c",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/b039a551a7b41b70e426e4a3cd60346c89db9b6c.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "36e4de702036d31b649f96519676509c4027dc10cc3c97f0335c199b305d45b7",
    strip_prefix = "rules_proto-8aa1e67c09bc8df20df33886909d44129cfb7e63",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/8aa1e67c09bc8df20df33886909d44129cfb7e63.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/8aa1e67c09bc8df20df33886909d44129cfb7e63.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "05bad056df1286f920c675504787510434ae8b1b2d83746e0a9b0589429dbe55",
    strip_prefix = "emsdk-9b0db91883452051aca8deddc932363aab29060b/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/9b0db91883452051aca8deddc932363aab29060b.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "e2e5ef6857bf0ee529e1abb5a669f5949c4577de8b248d0f18fc3482a8e8e00c",
    strip_prefix = "closure-library-6defd831976a3843c85df584a86d3382815821b8",
    urls = ["https://github.com/google/closure-library/archive/6defd831976a3843c85df584a86d3382815821b8.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
